{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectItems","className","map","todo","classNames","id","completed","title","type","onClick","userId","TodoFilter","valueFormItems","hanldleChange","value","statusSelect","onChange","e","target","placeholder","input","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","selectUser","useState","user","setUser","setTodo","useEffect","find","el","href","email","name","App","allToodo","setAllToodo","filterToodo","setFilterToodo","visibleToodo","setVisibleToodo","selectUserId","setSelectUserId","selectTodoId","setSelectTodoId","formItems","setFormItems","UserId","todoId","filter","handleSelect","toLocaleLowerCase","includes","key","prev","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1231c651.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: number,\n  selectItems: (UserId: number, todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectItems,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames({\n              'has-background-info-light': todo.id === selectTodo,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {todo.id !== selectTodo ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectItems(todo.userId, todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterForm } from '../../types/FilterForm';\n\ntype Props = {\n  valueFormItems: FilterForm,\n  hanldleChange: (key: string, value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  valueFormItems,\n  hanldleChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          className=\"statusSelect\"\n          value={valueFormItems.statusSelect}\n          onChange={e => hanldleChange(e.target.className, e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={valueFormItems.input}\n        onChange={e => hanldleChange(e.target.className, e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {valueFormItems.input && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => hanldleChange('input', '')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser, getTodos } from '../../api';\n\ntype Props = {\n  selectUser: number\n  selectTodo: number,\n  selectItems: (UserId: number, todoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectUser,\n  selectTodo,\n  selectItems,\n}) => {\n  const [user, setUser] = useState<undefined | User>();\n  const [todo, setTodo] = useState<undefined | Todo>();\n\n  useEffect(() => {\n    getUser(selectUser).then(res => setUser(res));\n    getTodos().then(res => setTodo(res.find(el => el.id === selectTodo)));\n  }, [selectUser]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectItems(0, 0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-danger': !todo?.completed,\n                'has-text-success': todo?.completed,\n              })}\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [allToodo, setAllToodo] = useState<Todo[]>([]);\n  const [filterToodo, setFilterToodo] = useState(allToodo);\n  const [visibleToodo, setVisibleToodo] = useState(filterToodo);\n  const [selectUserId, setSelectUserId] = useState(0);\n  const [selectTodoId, setSelectTodoId] = useState(0);\n  const [formItems, setFormItems] = useState({ statusSelect: 'all', input: '' });\n  const selectItems = (UserId: number, todoId: number) => {\n    setSelectUserId(UserId);\n    setSelectTodoId(todoId);\n  };\n\n  const hanldleChange = (key: string, value: string) => {\n    setFormItems(prev => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  const handleSelect = () => {\n    switch (true) {\n      case formItems.statusSelect === 'active':\n        setFilterToodo(allToodo.filter(todo => !todo.completed));\n        break;\n\n      case formItems.statusSelect === 'completed':\n        setFilterToodo(allToodo.filter(todo => todo.completed));\n        break;\n\n      default:\n        setFilterToodo(allToodo);\n    }\n  };\n\n  const handleSearch = () => {\n    setVisibleToodo(filterToodo.filter(todo => todo.title.toLocaleLowerCase()\n      .includes(formItems.input.toLocaleLowerCase())));\n  };\n\n  useEffect(() => {\n    getTodos().then(res => setAllToodo(res));\n  }, []);\n\n  useEffect(() => {\n    handleSelect();\n  }, [formItems, allToodo]);\n\n  useEffect(() => {\n    handleSearch();\n  }, [filterToodo, formItems]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                valueFormItems={formItems}\n                hanldleChange={hanldleChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {allToodo.length !== 0 ? (\n                <TodoList\n                  todos={visibleToodo}\n                  selectTodo={selectTodoId}\n                  selectItems={selectItems}\n                />\n              ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectUserId && (\n        <TodoModal\n          selectUser={selectUserId}\n          selectTodo={selectTodoId}\n          selectItems={selectItems}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}